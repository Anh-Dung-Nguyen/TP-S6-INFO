openapi: 3.1.0
info:
  title: TP Web INSA Rennes
  description: |-
    Intro au dev d'un back-end REST en Java avec Spring et OpenAPI
  version: 2024.0.0
servers:
  - url: "http://localhost:8080/api"

tags: # Some annotations used to document the route descriptions (optional)
  - name: hello
    description: Démo
paths:
  /v1/public/hello/helloworld:
    get:
      tags:
        - hello
      responses:
        '200':
          description: c'est bon
  /v2/public/todo/todo/{id}:
    get:
      tags:
        - todo
      summary: Récupère un Todo par son ID
      description: Retourne un Todo si l’ID est valide, sinon retourne 400
      operationId: getTodoById
      parameters:
        - name: id
          in: path
          description: ID du Todo à récupérer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Todo trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
        '400':
          description: ID invalide ou Todo introuvable
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
        - todo
      summary: Supprime un Todo par son id
      description: Supprime un Todo existant, ou retourne 400 s’il n’existe pas
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          description: L’ID du todo à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Todo supprimé avec succès
        '400':
          description: Todo introuvable

  /v2/public/todo/todo:
    post:
      tags:
        - todo
      summary: Ajoute un nouveau Todo
      description: Crée un Todo et l’ajoute à la table (l’id est généré automatiquement)
      operationId: addTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todo'
      responses:
        '200':
          description: Todo ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
    put:
      tags:
        - todo
      summary: Mettre à jour Todo
      description: Crée un Todo et l’ajoute à la table (l’id est généré automatiquement)
      operationId: mettreAJourTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todo'
      responses:
        '200':
          description: Todo ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
    patch:
      tags:
        - todo
      summary: Modifie un Todo existant
      description: Modifie un Todo existant partiellement (mauvaise version du patch)
      operationId: patchTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todo'
      responses:
        '200':
          description: Todo modifié avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
        '400':
          description: Todo introuvable

  /v2/public/todolist/{id}:
    get:
      tags:
        - todolist
      summary: Récupère un Todo par son ID
      description: Retourne un Todo si l’ID est valide, sinon retourne 400
      operationId: getTodoListById
      parameters:
        - name: id
          in: path
          description: ID du Todo à récupérer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Todo trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todolist'
        '400':
          description: ID invalide ou Todo introuvable
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
        - todolist
      summary: Supprime un Todo par son id
      description: Supprime un Todo existant, ou retourne 400 s’il n’existe pas
      operationId: deleteTodoList
      parameters:
        - name: id
          in: path
          description: L’ID du todo à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Todo supprimé avec succès
        '400':
          description: Todo introuvable

  /v2/public/todolist:
    post:
      tags:
        - todolist
      summary: Ajoute un nouveau Todo
      description: Crée un Todo et l’ajoute à la table (l’id est généré automatiquement)
      operationId: addTodoList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todolist'
      responses:
        '200':
          description: Todo ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todolist'
    put:
      tags:
        - todolist
      summary: Mettre à jour Todo
      description: Crée un Todo et l’ajoute à la table (l’id est généré automatiquement)
      operationId: mettreAJourTodoList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todolist'
      responses:
        '200':
          description: Todo ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todolist'
    patch:
      tags:
        - todolist
      summary: Modifie un Todo existant
      description: Modifie un Todo existant partiellement (mauvaise version du patch)
      operationId: patchTodoList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todolist'
      responses:
        '200':
          description: Todo modifié avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todolist'
        '400':
          description: Todo introuvable


components:
  schemas:
    todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [10, 1]
        title:
          type: string
          examples: ["mon todo"]
        description:
          type: string
          examples: ["je dois terminer mon TP de Web pour le prochain TP"]
        categories:
          type: array
          items:
            type: string
            examples: ["WORK"]
    todolist:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [10, 1]
        title:
          type: string
          examples: ["mon todo"]
        description:
          type: string
          examples: ["je dois terminer mon TP de Web pour le prochain TP"]
        categories:
          type: array
          items:
            type: string
            examples: ["WORK"]
    NamedDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string